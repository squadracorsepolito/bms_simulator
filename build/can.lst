ARM GAS  /tmp/ccztuRff.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.MX_CAN1_Init.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4572726F 		.ascii	"Errore attivazione can1\015\012\000"
  20      72652061 
  20      74746976 
  20      617A696F 
  20      6E652063 
  21 001a 0000     		.align	2
  22              	.LC1:
  23 001c 4572726F 		.ascii	"Errore avvio CAN1\015\012\000"
  23      72652061 
  23      7676696F 
  23      2043414E 
  23      310D0A00 
  24              		.section	.text.MX_CAN1_Init,"ax",%progbits
  25              		.align	1
  26              		.global	MX_CAN1_Init
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	MX_CAN1_Init:
  34              	.LFB134:
  35              		.file 1 "Core/Src/can.c"
   1:Core/Src/can.c **** /* USER CODE BEGIN Header */
   2:Core/Src/can.c **** /**
   3:Core/Src/can.c ****   ******************************************************************************
   4:Core/Src/can.c ****   * @file    can.c
   5:Core/Src/can.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/can.c ****   *          of the CAN instances.
   7:Core/Src/can.c ****   ******************************************************************************
   8:Core/Src/can.c ****   * @attention
   9:Core/Src/can.c ****   *
  10:Core/Src/can.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/can.c ****   * All rights reserved.
  12:Core/Src/can.c ****   *
  13:Core/Src/can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/can.c ****   * in the root directory of this software component.
  15:Core/Src/can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /tmp/ccztuRff.s 			page 2


  16:Core/Src/can.c ****   *
  17:Core/Src/can.c ****   ******************************************************************************
  18:Core/Src/can.c ****   */
  19:Core/Src/can.c **** /* USER CODE END Header */
  20:Core/Src/can.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/can.c **** #include "can.h"
  22:Core/Src/can.c **** 
  23:Core/Src/can.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/can.c **** #include "hvcb.h"
  25:Core/Src/can.c **** #include "usart.h"
  26:Core/Src/can.c **** #include "mcb.h"
  27:Core/Src/can.c **** #include "gpio.h"
  28:Core/Src/can.c **** #include <string.h>
  29:Core/Src/can.c **** 
  30:Core/Src/can.c **** extern volatile uint8_t error_code;
  31:Core/Src/can.c **** volatile uint8_t can_data_updated = 0;
  32:Core/Src/can.c **** 
  33:Core/Src/can.c **** /* USER CODE END 0 */
  34:Core/Src/can.c **** 
  35:Core/Src/can.c **** CAN_HandleTypeDef hcan1;
  36:Core/Src/can.c **** 
  37:Core/Src/can.c **** /* CAN1 init function */
  38:Core/Src/can.c **** void MX_CAN1_Init(void)
  39:Core/Src/can.c **** {
  36              		.loc 1 39 1 view -0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 112
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 70B5     		push	{r4, r5, r6, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 4, -16
  44              		.cfi_offset 5, -12
  45              		.cfi_offset 6, -8
  46              		.cfi_offset 14, -4
  47 0002 9CB0     		sub	sp, sp, #112
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 128
  40:Core/Src/can.c **** 
  41:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 0 */
  42:Core/Src/can.c **** 
  43:Core/Src/can.c ****   /* USER CODE END CAN1_Init 0 */
  44:Core/Src/can.c **** 
  45:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 1 */
  46:Core/Src/can.c **** 
  47:Core/Src/can.c ****   /* USER CODE END CAN1_Init 1 */
  48:Core/Src/can.c ****   hcan1.Instance = CAN1;
  50              		.loc 1 48 3 view .LVU1
  51              		.loc 1 48 18 is_stmt 0 view .LVU2
  52 0004 3648     		ldr	r0, .L9
  53 0006 374B     		ldr	r3, .L9+4
  54 0008 0360     		str	r3, [r0]
  49:Core/Src/can.c ****   hcan1.Init.Prescaler = 3;
  55              		.loc 1 49 3 is_stmt 1 view .LVU3
  56              		.loc 1 49 24 is_stmt 0 view .LVU4
  57 000a 0323     		movs	r3, #3
  58 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccztuRff.s 			page 3


  50:Core/Src/can.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
  59              		.loc 1 50 3 is_stmt 1 view .LVU5
  60              		.loc 1 50 19 is_stmt 0 view .LVU6
  61 000e 0023     		movs	r3, #0
  62 0010 8360     		str	r3, [r0, #8]
  51:Core/Src/can.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
  63              		.loc 1 51 3 is_stmt 1 view .LVU7
  64              		.loc 1 51 28 is_stmt 0 view .LVU8
  65 0012 C360     		str	r3, [r0, #12]
  52:Core/Src/can.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_12TQ;
  66              		.loc 1 52 3 is_stmt 1 view .LVU9
  67              		.loc 1 52 23 is_stmt 0 view .LVU10
  68 0014 4FF43022 		mov	r2, #720896
  69 0018 0261     		str	r2, [r0, #16]
  53:Core/Src/can.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
  70              		.loc 1 53 3 is_stmt 1 view .LVU11
  71              		.loc 1 53 23 is_stmt 0 view .LVU12
  72 001a 4FF48012 		mov	r2, #1048576
  73 001e 4261     		str	r2, [r0, #20]
  54:Core/Src/can.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
  74              		.loc 1 54 3 is_stmt 1 view .LVU13
  75              		.loc 1 54 32 is_stmt 0 view .LVU14
  76 0020 0376     		strb	r3, [r0, #24]
  55:Core/Src/can.c ****   hcan1.Init.AutoBusOff = DISABLE;
  77              		.loc 1 55 3 is_stmt 1 view .LVU15
  78              		.loc 1 55 25 is_stmt 0 view .LVU16
  79 0022 4376     		strb	r3, [r0, #25]
  56:Core/Src/can.c ****   hcan1.Init.AutoWakeUp = DISABLE;
  80              		.loc 1 56 3 is_stmt 1 view .LVU17
  81              		.loc 1 56 25 is_stmt 0 view .LVU18
  82 0024 8376     		strb	r3, [r0, #26]
  57:Core/Src/can.c ****   hcan1.Init.AutoRetransmission = DISABLE;
  83              		.loc 1 57 3 is_stmt 1 view .LVU19
  84              		.loc 1 57 33 is_stmt 0 view .LVU20
  85 0026 C376     		strb	r3, [r0, #27]
  58:Core/Src/can.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
  86              		.loc 1 58 3 is_stmt 1 view .LVU21
  87              		.loc 1 58 32 is_stmt 0 view .LVU22
  88 0028 0377     		strb	r3, [r0, #28]
  59:Core/Src/can.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
  89              		.loc 1 59 3 is_stmt 1 view .LVU23
  90              		.loc 1 59 35 is_stmt 0 view .LVU24
  91 002a 4377     		strb	r3, [r0, #29]
  60:Core/Src/can.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
  92              		.loc 1 60 3 is_stmt 1 view .LVU25
  93              		.loc 1 60 7 is_stmt 0 view .LVU26
  94 002c FFF7FEFF 		bl	HAL_CAN_Init
  95              	.LVL0:
  96              		.loc 1 60 6 view .LVU27
  97 0030 0028     		cmp	r0, #0
  98 0032 2CD1     		bne	.L6
  99              	.L2:
  61:Core/Src/can.c ****   {
  62:Core/Src/can.c ****     Error_Handler();
  63:Core/Src/can.c ****   }
  64:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 2 */
  65:Core/Src/can.c ****   //AIRS CMD can message filter
ARM GAS  /tmp/ccztuRff.s 			page 4


  66:Core/Src/can.c **** CAN_FilterTypeDef filterCmd;
 100              		.loc 1 66 1 is_stmt 1 view .LVU28
  67:Core/Src/can.c **** filterCmd.FilterActivation = ENABLE;
 101              		.loc 1 67 1 view .LVU29
 102              		.loc 1 67 28 is_stmt 0 view .LVU30
 103 0034 0125     		movs	r5, #1
 104 0036 1A95     		str	r5, [sp, #104]
  68:Core/Src/can.c **** filterCmd.FilterBank = 0u;
 105              		.loc 1 68 1 is_stmt 1 view .LVU31
 106              		.loc 1 68 22 is_stmt 0 view .LVU32
 107 0038 0024     		movs	r4, #0
 108 003a 1794     		str	r4, [sp, #92]
  69:Core/Src/can.c **** filterCmd.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 109              		.loc 1 69 1 is_stmt 1 view .LVU33
 110              		.loc 1 69 32 is_stmt 0 view .LVU34
 111 003c 1694     		str	r4, [sp, #88]
  70:Core/Src/can.c **** filterCmd.FilterIdHigh = (HVCB_HVB_TX_VCU_CMD_FRAME_ID << 5);
 112              		.loc 1 70 1 is_stmt 1 view .LVU35
 113              		.loc 1 70 24 is_stmt 0 view .LVU36
 114 003e 4FF42853 		mov	r3, #10752
 115 0042 1293     		str	r3, [sp, #72]
  71:Core/Src/can.c **** filterCmd.FilterIdLow = 0x0000;
 116              		.loc 1 71 1 is_stmt 1 view .LVU37
 117              		.loc 1 71 23 is_stmt 0 view .LVU38
 118 0044 1394     		str	r4, [sp, #76]
  72:Core/Src/can.c **** filterCmd.FilterMaskIdHigh = 0x0000;
 119              		.loc 1 72 1 is_stmt 1 view .LVU39
 120              		.loc 1 72 28 is_stmt 0 view .LVU40
 121 0046 1494     		str	r4, [sp, #80]
  73:Core/Src/can.c **** filterCmd.FilterMaskIdLow = 0x0000;
 122              		.loc 1 73 1 is_stmt 1 view .LVU41
 123              		.loc 1 73 27 is_stmt 0 view .LVU42
 124 0048 1594     		str	r4, [sp, #84]
  74:Core/Src/can.c **** filterCmd.FilterMode = CAN_FILTERMODE_IDLIST;
 125              		.loc 1 74 1 is_stmt 1 view .LVU43
 126              		.loc 1 74 22 is_stmt 0 view .LVU44
 127 004a 1895     		str	r5, [sp, #96]
  75:Core/Src/can.c **** filterCmd.FilterScale = CAN_FILTERSCALE_32BIT;
 128              		.loc 1 75 1 is_stmt 1 view .LVU45
 129              		.loc 1 75 23 is_stmt 0 view .LVU46
 130 004c 1995     		str	r5, [sp, #100]
  76:Core/Src/can.c **** 
  77:Core/Src/can.c **** HAL_CAN_ConfigFilter(&hcan1, &filterCmd);
 131              		.loc 1 77 1 is_stmt 1 view .LVU47
 132 004e 244E     		ldr	r6, .L9
 133 0050 12A9     		add	r1, sp, #72
 134 0052 3046     		mov	r0, r6
 135 0054 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 136              	.LVL1:
  78:Core/Src/can.c **** 
  79:Core/Src/can.c **** //CAN FILTERS//
  80:Core/Src/can.c **** 
  81:Core/Src/can.c **** //AMS IMD error filter
  82:Core/Src/can.c **** CAN_FilterTypeDef filterTlbSignals;
 137              		.loc 1 82 1 view .LVU48
  83:Core/Src/can.c **** filterTlbSignals.FilterActivation = ENABLE;
 138              		.loc 1 83 1 view .LVU49
ARM GAS  /tmp/ccztuRff.s 			page 5


 139              		.loc 1 83 35 is_stmt 0 view .LVU50
 140 0058 1095     		str	r5, [sp, #64]
  84:Core/Src/can.c **** filterTlbSignals.FilterBank = 1;
 141              		.loc 1 84 1 is_stmt 1 view .LVU51
 142              		.loc 1 84 29 is_stmt 0 view .LVU52
 143 005a 0D95     		str	r5, [sp, #52]
  85:Core/Src/can.c **** filterTlbSignals.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 144              		.loc 1 85 1 is_stmt 1 view .LVU53
 145              		.loc 1 85 39 is_stmt 0 view .LVU54
 146 005c 0C94     		str	r4, [sp, #48]
  86:Core/Src/can.c **** filterTlbSignals.FilterIdHigh = (MCB_TLB_BAT_SIGNALS_STATUS_FRAME_ID << 5);
 147              		.loc 1 86 1 is_stmt 1 view .LVU55
 148              		.loc 1 86 31 is_stmt 0 view .LVU56
 149 005e 4FF40263 		mov	r3, #2080
 150 0062 0893     		str	r3, [sp, #32]
  87:Core/Src/can.c **** filterTlbSignals.FilterIdLow = 0x0000;
 151              		.loc 1 87 1 is_stmt 1 view .LVU57
 152              		.loc 1 87 30 is_stmt 0 view .LVU58
 153 0064 0994     		str	r4, [sp, #36]
  88:Core/Src/can.c **** filterTlbSignals.FilterMaskIdHigh = 0x0000;
 154              		.loc 1 88 1 is_stmt 1 view .LVU59
 155              		.loc 1 88 35 is_stmt 0 view .LVU60
 156 0066 0A94     		str	r4, [sp, #40]
  89:Core/Src/can.c **** filterTlbSignals.FilterMaskIdLow = 0x0000;
 157              		.loc 1 89 1 is_stmt 1 view .LVU61
 158              		.loc 1 89 34 is_stmt 0 view .LVU62
 159 0068 0B94     		str	r4, [sp, #44]
  90:Core/Src/can.c **** filterTlbSignals.FilterMode = CAN_FILTERMODE_IDLIST;
 160              		.loc 1 90 1 is_stmt 1 view .LVU63
 161              		.loc 1 90 29 is_stmt 0 view .LVU64
 162 006a 0E95     		str	r5, [sp, #56]
  91:Core/Src/can.c **** filterTlbSignals.FilterScale = CAN_FILTERSCALE_32BIT;
 163              		.loc 1 91 1 is_stmt 1 view .LVU65
 164              		.loc 1 91 30 is_stmt 0 view .LVU66
 165 006c 0F95     		str	r5, [sp, #60]
  92:Core/Src/can.c **** 
  93:Core/Src/can.c **** HAL_CAN_ConfigFilter(&hcan1, &filterTlbSignals);
 166              		.loc 1 93 1 is_stmt 1 view .LVU67
 167 006e 08A9     		add	r1, sp, #32
 168 0070 3046     		mov	r0, r6
 169 0072 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 170              	.LVL2:
  94:Core/Src/can.c **** 
  95:Core/Src/can.c **** 
  96:Core/Src/can.c **** 
  97:Core/Src/can.c **** //notifications interrupt RX//
  98:Core/Src/can.c **** 
  99:Core/Src/can.c **** if (HAL_CAN_ActivateNotification(&hcan1,
 171              		.loc 1 99 1 view .LVU68
 172              		.loc 1 99 5 is_stmt 0 view .LVU69
 173 0076 48F61371 		movw	r1, #36627
 174 007a 3046     		mov	r0, r6
 175 007c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 176              	.LVL3:
 177              		.loc 1 99 4 view .LVU70
 178 0080 40B9     		cbnz	r0, .L7
 179              	.L3:
ARM GAS  /tmp/ccztuRff.s 			page 6


 100:Core/Src/can.c ****     CAN_IT_RX_FIFO0_MSG_PENDING |
 101:Core/Src/can.c ****     CAN_IT_RX_FIFO1_MSG_PENDING |
 102:Core/Src/can.c ****     CAN_IT_ERROR_WARNING        |
 103:Core/Src/can.c ****     CAN_IT_ERROR_PASSIVE        |
 104:Core/Src/can.c ****     CAN_IT_BUSOFF               |
 105:Core/Src/can.c ****     CAN_IT_LAST_ERROR_CODE      |
 106:Core/Src/can.c ****     CAN_IT_ERROR                |
 107:Core/Src/can.c ****     CAN_IT_TX_MAILBOX_EMPTY
 108:Core/Src/can.c **** ) != HAL_OK) {
 109:Core/Src/can.c ****     char error_msg[] = "Errore attivazione can1\r\n";
 110:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 111:Core/Src/can.c ****     
 112:Core/Src/can.c **** }
 113:Core/Src/can.c **** 
 114:Core/Src/can.c **** // start the CAN peripheral //
 115:Core/Src/can.c **** if (HAL_CAN_Start(&hcan1) != HAL_OK) {
 180              		.loc 1 115 1 is_stmt 1 view .LVU71
 181              		.loc 1 115 5 is_stmt 0 view .LVU72
 182 0082 1748     		ldr	r0, .L9
 183 0084 FFF7FEFF 		bl	HAL_CAN_Start
 184              	.LVL4:
 185              		.loc 1 115 4 view .LVU73
 186 0088 B0B9     		cbnz	r0, .L8
 187              	.L1:
 116:Core/Src/can.c ****     char error_msg[] = "Errore avvio CAN1\r\n";
 117:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 118:Core/Src/can.c ****     error_code = CAN1_start_error;
 119:Core/Src/can.c **** }
 120:Core/Src/can.c **** 
 121:Core/Src/can.c **** 
 122:Core/Src/can.c ****   /* USER CODE END CAN1_Init 2 */
 123:Core/Src/can.c **** 
 124:Core/Src/can.c **** }
 188              		.loc 1 124 1 view .LVU74
 189 008a 1CB0     		add	sp, sp, #112
 190              	.LCFI2:
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 16
 193              		@ sp needed
 194 008c 70BD     		pop	{r4, r5, r6, pc}
 195              	.L6:
 196              	.LCFI3:
 197              		.cfi_restore_state
  62:Core/Src/can.c ****   }
 198              		.loc 1 62 5 is_stmt 1 view .LVU75
 199 008e FFF7FEFF 		bl	Error_Handler
 200              	.LVL5:
 201 0092 CFE7     		b	.L2
 202              	.L7:
 203              	.LBB2:
 109:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 204              		.loc 1 109 5 view .LVU76
 109:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 205              		.loc 1 109 10 is_stmt 0 view .LVU77
 206 0094 01AC     		add	r4, sp, #4
 207 0096 144D     		ldr	r5, .L9+8
 208 0098 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccztuRff.s 			page 7


 209 009a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 210 009c 95E80700 		ldm	r5, {r0, r1, r2}
 211 00a0 03C4     		stmia	r4!, {r0, r1}
 212 00a2 2280     		strh	r2, [r4]	@ movhi
 110:Core/Src/can.c ****     
 213              		.loc 1 110 5 is_stmt 1 view .LVU78
 110:Core/Src/can.c ****     
 214              		.loc 1 110 54 is_stmt 0 view .LVU79
 215 00a4 01A8     		add	r0, sp, #4
 216 00a6 FFF7FEFF 		bl	strlen
 217              	.LVL6:
 110:Core/Src/can.c ****     
 218              		.loc 1 110 5 view .LVU80
 219 00aa 0A23     		movs	r3, #10
 220 00ac 82B2     		uxth	r2, r0
 221 00ae 01A9     		add	r1, sp, #4
 222 00b0 0E48     		ldr	r0, .L9+12
 223 00b2 FFF7FEFF 		bl	HAL_UART_Transmit
 224              	.LVL7:
 225 00b6 E4E7     		b	.L3
 226              	.L8:
 227              	.LBE2:
 228              	.LBB3:
 116:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 229              		.loc 1 116 5 is_stmt 1 view .LVU81
 116:Core/Src/can.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)error_msg, strlen(error_msg), 10);
 230              		.loc 1 116 10 is_stmt 0 view .LVU82
 231 00b8 01AC     		add	r4, sp, #4
 232 00ba 0D4D     		ldr	r5, .L9+16
 233 00bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 234 00be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 235 00c0 2B68     		ldr	r3, [r5]
 236 00c2 2360     		str	r3, [r4]
 117:Core/Src/can.c ****     error_code = CAN1_start_error;
 237              		.loc 1 117 5 is_stmt 1 view .LVU83
 117:Core/Src/can.c ****     error_code = CAN1_start_error;
 238              		.loc 1 117 54 is_stmt 0 view .LVU84
 239 00c4 01A8     		add	r0, sp, #4
 240 00c6 FFF7FEFF 		bl	strlen
 241              	.LVL8:
 117:Core/Src/can.c ****     error_code = CAN1_start_error;
 242              		.loc 1 117 5 view .LVU85
 243 00ca 0A23     		movs	r3, #10
 244 00cc 82B2     		uxth	r2, r0
 245 00ce 01A9     		add	r1, sp, #4
 246 00d0 0648     		ldr	r0, .L9+12
 247 00d2 FFF7FEFF 		bl	HAL_UART_Transmit
 248              	.LVL9:
 118:Core/Src/can.c **** }
 249              		.loc 1 118 5 is_stmt 1 view .LVU86
 118:Core/Src/can.c **** }
 250              		.loc 1 118 16 is_stmt 0 view .LVU87
 251 00d6 074B     		ldr	r3, .L9+20
 252 00d8 0222     		movs	r2, #2
 253 00da 1A70     		strb	r2, [r3]
 254              	.LBE3:
 255              		.loc 1 124 1 view .LVU88
ARM GAS  /tmp/ccztuRff.s 			page 8


 256 00dc D5E7     		b	.L1
 257              	.L10:
 258 00de 00BF     		.align	2
 259              	.L9:
 260 00e0 00000000 		.word	.LANCHOR0
 261 00e4 00640040 		.word	1073767424
 262 00e8 00000000 		.word	.LC0
 263 00ec 00000000 		.word	huart2
 264 00f0 1C000000 		.word	.LC1
 265 00f4 00000000 		.word	error_code
 266              		.cfi_endproc
 267              	.LFE134:
 269              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_CAN_MspInit
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	HAL_CAN_MspInit:
 278              	.LVL10:
 279              	.LFB135:
 125:Core/Src/can.c **** 
 126:Core/Src/can.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
 127:Core/Src/can.c **** {
 280              		.loc 1 127 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 32
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		.loc 1 127 1 is_stmt 0 view .LVU90
 285 0000 10B5     		push	{r4, lr}
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 4, -8
 289              		.cfi_offset 14, -4
 290 0002 88B0     		sub	sp, sp, #32
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 40
 128:Core/Src/can.c **** 
 129:Core/Src/can.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 293              		.loc 1 129 3 is_stmt 1 view .LVU91
 294              		.loc 1 129 20 is_stmt 0 view .LVU92
 295 0004 0023     		movs	r3, #0
 296 0006 0393     		str	r3, [sp, #12]
 297 0008 0493     		str	r3, [sp, #16]
 298 000a 0593     		str	r3, [sp, #20]
 299 000c 0693     		str	r3, [sp, #24]
 300 000e 0793     		str	r3, [sp, #28]
 130:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 301              		.loc 1 130 3 is_stmt 1 view .LVU93
 302              		.loc 1 130 15 is_stmt 0 view .LVU94
 303 0010 0268     		ldr	r2, [r0]
 304              		.loc 1 130 5 view .LVU95
 305 0012 254B     		ldr	r3, .L15
 306 0014 9A42     		cmp	r2, r3
 307 0016 01D0     		beq	.L14
 308              	.LVL11:
ARM GAS  /tmp/ccztuRff.s 			page 9


 309              	.L11:
 131:Core/Src/can.c ****   {
 132:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 133:Core/Src/can.c **** 
 134:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 0 */
 135:Core/Src/can.c ****     /* CAN1 clock enable */
 136:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
 137:Core/Src/can.c **** 
 138:Core/Src/can.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 139:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 140:Core/Src/can.c ****     PA11     ------> CAN1_RX
 141:Core/Src/can.c ****     PA12     ------> CAN1_TX
 142:Core/Src/can.c ****     */
 143:Core/Src/can.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 144:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 145:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 146:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 147:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 148:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149:Core/Src/can.c **** 
 150:Core/Src/can.c ****     /* CAN1 interrupt Init */
 151:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 0, 0);
 152:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 153:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 154:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 155:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 156:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 157:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 158:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 159:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 160:Core/Src/can.c **** 
 161:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 1 */
 162:Core/Src/can.c ****   }
 163:Core/Src/can.c **** }
 310              		.loc 1 163 1 view .LVU96
 311 0018 08B0     		add	sp, sp, #32
 312              	.LCFI6:
 313              		.cfi_remember_state
 314              		.cfi_def_cfa_offset 8
 315              		@ sp needed
 316 001a 10BD     		pop	{r4, pc}
 317              	.LVL12:
 318              	.L14:
 319              	.LCFI7:
 320              		.cfi_restore_state
 136:Core/Src/can.c **** 
 321              		.loc 1 136 5 is_stmt 1 view .LVU97
 322              	.LBB4:
 136:Core/Src/can.c **** 
 323              		.loc 1 136 5 view .LVU98
 324 001c 0024     		movs	r4, #0
 325 001e 0194     		str	r4, [sp, #4]
 136:Core/Src/can.c **** 
 326              		.loc 1 136 5 view .LVU99
 327 0020 03F5EA33 		add	r3, r3, #119808
 328 0024 1A6C     		ldr	r2, [r3, #64]
 329 0026 42F00072 		orr	r2, r2, #33554432
ARM GAS  /tmp/ccztuRff.s 			page 10


 330 002a 1A64     		str	r2, [r3, #64]
 136:Core/Src/can.c **** 
 331              		.loc 1 136 5 view .LVU100
 332 002c 1A6C     		ldr	r2, [r3, #64]
 333 002e 02F00072 		and	r2, r2, #33554432
 334 0032 0192     		str	r2, [sp, #4]
 136:Core/Src/can.c **** 
 335              		.loc 1 136 5 view .LVU101
 336 0034 019A     		ldr	r2, [sp, #4]
 337              	.LBE4:
 136:Core/Src/can.c **** 
 338              		.loc 1 136 5 view .LVU102
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 339              		.loc 1 138 5 view .LVU103
 340              	.LBB5:
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 341              		.loc 1 138 5 view .LVU104
 342 0036 0294     		str	r4, [sp, #8]
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 343              		.loc 1 138 5 view .LVU105
 344 0038 1A6B     		ldr	r2, [r3, #48]
 345 003a 42F00102 		orr	r2, r2, #1
 346 003e 1A63     		str	r2, [r3, #48]
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 347              		.loc 1 138 5 view .LVU106
 348 0040 1B6B     		ldr	r3, [r3, #48]
 349 0042 03F00103 		and	r3, r3, #1
 350 0046 0293     		str	r3, [sp, #8]
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 351              		.loc 1 138 5 view .LVU107
 352 0048 029B     		ldr	r3, [sp, #8]
 353              	.LBE5:
 138:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 354              		.loc 1 138 5 view .LVU108
 143:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 355              		.loc 1 143 5 view .LVU109
 143:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 356              		.loc 1 143 25 is_stmt 0 view .LVU110
 357 004a 4FF4C053 		mov	r3, #6144
 358 004e 0393     		str	r3, [sp, #12]
 144:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 359              		.loc 1 144 5 is_stmt 1 view .LVU111
 144:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 360              		.loc 1 144 26 is_stmt 0 view .LVU112
 361 0050 0223     		movs	r3, #2
 362 0052 0493     		str	r3, [sp, #16]
 145:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 363              		.loc 1 145 5 is_stmt 1 view .LVU113
 146:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 364              		.loc 1 146 5 view .LVU114
 146:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 365              		.loc 1 146 27 is_stmt 0 view .LVU115
 366 0054 0323     		movs	r3, #3
 367 0056 0693     		str	r3, [sp, #24]
 147:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 368              		.loc 1 147 5 is_stmt 1 view .LVU116
 147:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  /tmp/ccztuRff.s 			page 11


 369              		.loc 1 147 31 is_stmt 0 view .LVU117
 370 0058 0923     		movs	r3, #9
 371 005a 0793     		str	r3, [sp, #28]
 148:Core/Src/can.c **** 
 372              		.loc 1 148 5 is_stmt 1 view .LVU118
 373 005c 03A9     		add	r1, sp, #12
 374 005e 1348     		ldr	r0, .L15+4
 375              	.LVL13:
 148:Core/Src/can.c **** 
 376              		.loc 1 148 5 is_stmt 0 view .LVU119
 377 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 378              	.LVL14:
 151:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 379              		.loc 1 151 5 is_stmt 1 view .LVU120
 380 0064 2246     		mov	r2, r4
 381 0066 2146     		mov	r1, r4
 382 0068 1320     		movs	r0, #19
 383 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 384              	.LVL15:
 152:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 385              		.loc 1 152 5 view .LVU121
 386 006e 1320     		movs	r0, #19
 387 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 388              	.LVL16:
 153:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 389              		.loc 1 153 5 view .LVU122
 390 0074 2246     		mov	r2, r4
 391 0076 2146     		mov	r1, r4
 392 0078 1420     		movs	r0, #20
 393 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 394              	.LVL17:
 154:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 395              		.loc 1 154 5 view .LVU123
 396 007e 1420     		movs	r0, #20
 397 0080 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 398              	.LVL18:
 155:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 399              		.loc 1 155 5 view .LVU124
 400 0084 2246     		mov	r2, r4
 401 0086 2146     		mov	r1, r4
 402 0088 1520     		movs	r0, #21
 403 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 404              	.LVL19:
 156:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_SCE_IRQn, 0, 0);
 405              		.loc 1 156 5 view .LVU125
 406 008e 1520     		movs	r0, #21
 407 0090 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 408              	.LVL20:
 157:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_SCE_IRQn);
 409              		.loc 1 157 5 view .LVU126
 410 0094 2246     		mov	r2, r4
 411 0096 2146     		mov	r1, r4
 412 0098 1620     		movs	r0, #22
 413 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 414              	.LVL21:
 158:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 415              		.loc 1 158 5 view .LVU127
ARM GAS  /tmp/ccztuRff.s 			page 12


 416 009e 1620     		movs	r0, #22
 417 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 418              	.LVL22:
 419              		.loc 1 163 1 is_stmt 0 view .LVU128
 420 00a4 B8E7     		b	.L11
 421              	.L16:
 422 00a6 00BF     		.align	2
 423              	.L15:
 424 00a8 00640040 		.word	1073767424
 425 00ac 00000240 		.word	1073872896
 426              		.cfi_endproc
 427              	.LFE135:
 429              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 430              		.align	1
 431              		.global	HAL_CAN_MspDeInit
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv4-sp-d16
 437              	HAL_CAN_MspDeInit:
 438              	.LVL23:
 439              	.LFB136:
 164:Core/Src/can.c **** 
 165:Core/Src/can.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
 166:Core/Src/can.c **** {
 440              		.loc 1 166 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		.loc 1 166 1 is_stmt 0 view .LVU130
 445 0000 08B5     		push	{r3, lr}
 446              	.LCFI8:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
 449              		.cfi_offset 14, -4
 167:Core/Src/can.c **** 
 168:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 450              		.loc 1 168 3 is_stmt 1 view .LVU131
 451              		.loc 1 168 15 is_stmt 0 view .LVU132
 452 0002 0268     		ldr	r2, [r0]
 453              		.loc 1 168 5 view .LVU133
 454 0004 0D4B     		ldr	r3, .L21
 455 0006 9A42     		cmp	r2, r3
 456 0008 00D0     		beq	.L20
 457              	.LVL24:
 458              	.L17:
 169:Core/Src/can.c ****   {
 170:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 171:Core/Src/can.c **** 
 172:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 173:Core/Src/can.c ****     /* Peripheral clock disable */
 174:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 175:Core/Src/can.c **** 
 176:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 177:Core/Src/can.c ****     PA11     ------> CAN1_RX
 178:Core/Src/can.c ****     PA12     ------> CAN1_TX
 179:Core/Src/can.c ****     */
ARM GAS  /tmp/ccztuRff.s 			page 13


 180:Core/Src/can.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 181:Core/Src/can.c **** 
 182:Core/Src/can.c ****     /* CAN1 interrupt Deinit */
 183:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
 184:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 185:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 186:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_SCE_IRQn);
 187:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 188:Core/Src/can.c **** 
 189:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 190:Core/Src/can.c ****   }
 191:Core/Src/can.c **** }
 459              		.loc 1 191 1 view .LVU134
 460 000a 08BD     		pop	{r3, pc}
 461              	.LVL25:
 462              	.L20:
 174:Core/Src/can.c **** 
 463              		.loc 1 174 5 is_stmt 1 view .LVU135
 464 000c 0C4A     		ldr	r2, .L21+4
 465 000e 136C     		ldr	r3, [r2, #64]
 466 0010 23F00073 		bic	r3, r3, #33554432
 467 0014 1364     		str	r3, [r2, #64]
 180:Core/Src/can.c **** 
 468              		.loc 1 180 5 view .LVU136
 469 0016 4FF4C051 		mov	r1, #6144
 470 001a 0A48     		ldr	r0, .L21+8
 471              	.LVL26:
 180:Core/Src/can.c **** 
 472              		.loc 1 180 5 is_stmt 0 view .LVU137
 473 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 474              	.LVL27:
 183:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 475              		.loc 1 183 5 is_stmt 1 view .LVU138
 476 0020 1320     		movs	r0, #19
 477 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 478              	.LVL28:
 184:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 479              		.loc 1 184 5 view .LVU139
 480 0026 1420     		movs	r0, #20
 481 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 482              	.LVL29:
 185:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_SCE_IRQn);
 483              		.loc 1 185 5 view .LVU140
 484 002c 1520     		movs	r0, #21
 485 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 486              	.LVL30:
 186:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 487              		.loc 1 186 5 view .LVU141
 488 0032 1620     		movs	r0, #22
 489 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 490              	.LVL31:
 491              		.loc 1 191 1 is_stmt 0 view .LVU142
 492 0038 E7E7     		b	.L17
 493              	.L22:
 494 003a 00BF     		.align	2
 495              	.L21:
 496 003c 00640040 		.word	1073767424
ARM GAS  /tmp/ccztuRff.s 			page 14


 497 0040 00380240 		.word	1073887232
 498 0044 00000240 		.word	1073872896
 499              		.cfi_endproc
 500              	.LFE136:
 502              		.section	.text.can_wait,"ax",%progbits
 503              		.align	1
 504              		.global	can_wait
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv4-sp-d16
 510              	can_wait:
 511              	.LVL32:
 512              	.LFB137:
 192:Core/Src/can.c **** 
 193:Core/Src/can.c **** /* USER CODE BEGIN 1 */
 194:Core/Src/can.c **** uint8_t ams_error_active=0;
 195:Core/Src/can.c **** uint8_t imd_error_active=0;
 196:Core/Src/can.c **** uint8_t airs_command=0;
 197:Core/Src/can.c **** 
 198:Core/Src/can.c **** 
 199:Core/Src/can.c **** //wait for the CAN Tx to be ready
 200:Core/Src/can.c **** HAL_StatusTypeDef can_wait(CAN_HandleTypeDef *hcan, uint8_t timeout) {
 513              		.loc 1 200 70 is_stmt 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		.loc 1 200 70 is_stmt 0 view .LVU144
 518 0000 70B5     		push	{r4, r5, r6, lr}
 519              	.LCFI9:
 520              		.cfi_def_cfa_offset 16
 521              		.cfi_offset 4, -16
 522              		.cfi_offset 5, -12
 523              		.cfi_offset 6, -8
 524              		.cfi_offset 14, -4
 525 0002 0446     		mov	r4, r0
 526 0004 0E46     		mov	r6, r1
 201:Core/Src/can.c ****     uint32_t tick = HAL_GetTick();
 527              		.loc 1 201 5 is_stmt 1 view .LVU145
 528              		.loc 1 201 21 is_stmt 0 view .LVU146
 529 0006 FFF7FEFF 		bl	HAL_GetTick
 530              	.LVL33:
 531              		.loc 1 201 21 view .LVU147
 532 000a 0546     		mov	r5, r0
 533              	.LVL34:
 202:Core/Src/can.c ****     while (HAL_CAN_GetTxMailboxesFreeLevel(hcan) == 0) {
 534              		.loc 1 202 5 is_stmt 1 view .LVU148
 535              	.L24:
 536              		.loc 1 202 11 view .LVU149
 537              		.loc 1 202 12 is_stmt 0 view .LVU150
 538 000c 2046     		mov	r0, r4
 539 000e FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 540              	.LVL35:
 541              		.loc 1 202 11 view .LVU151
 542 0012 30B9     		cbnz	r0, .L29
 203:Core/Src/can.c ****         if (HAL_GetTick() - tick > timeout)
 543              		.loc 1 203 9 is_stmt 1 view .LVU152
ARM GAS  /tmp/ccztuRff.s 			page 15


 544              		.loc 1 203 13 is_stmt 0 view .LVU153
 545 0014 FFF7FEFF 		bl	HAL_GetTick
 546              	.LVL36:
 547              		.loc 1 203 27 view .LVU154
 548 0018 431B     		subs	r3, r0, r5
 549              		.loc 1 203 12 view .LVU155
 550 001a B342     		cmp	r3, r6
 551 001c F6D9     		bls	.L24
 204:Core/Src/can.c ****             return HAL_TIMEOUT;
 552              		.loc 1 204 20 view .LVU156
 553 001e 0320     		movs	r0, #3
 554 0020 00E0     		b	.L25
 555              	.L29:
 205:Core/Src/can.c ****     }
 206:Core/Src/can.c ****     return HAL_OK;
 556              		.loc 1 206 12 view .LVU157
 557 0022 0020     		movs	r0, #0
 558              	.L25:
 207:Core/Src/can.c **** }
 559              		.loc 1 207 1 view .LVU158
 560 0024 70BD     		pop	{r4, r5, r6, pc}
 561              		.loc 1 207 1 view .LVU159
 562              		.cfi_endproc
 563              	.LFE137:
 565              		.section	.text.can_send,"ax",%progbits
 566              		.align	1
 567              		.global	can_send
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu fpv4-sp-d16
 573              	can_send:
 574              	.LVL37:
 575              	.LFB138:
 208:Core/Src/can.c **** 
 209:Core/Src/can.c **** // send messages on the CAN bus
 210:Core/Src/can.c **** HAL_StatusTypeDef can_send(CAN_HandleTypeDef *hcan, uint8_t *buffer, CAN_TxHeaderTypeDef *header, u
 576              		.loc 1 210 117 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 16
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		.loc 1 210 117 is_stmt 0 view .LVU161
 581 0000 70B5     		push	{r4, r5, r6, lr}
 582              	.LCFI10:
 583              		.cfi_def_cfa_offset 16
 584              		.cfi_offset 4, -16
 585              		.cfi_offset 5, -12
 586              		.cfi_offset 6, -8
 587              		.cfi_offset 14, -4
 588 0002 84B0     		sub	sp, sp, #16
 589              	.LCFI11:
 590              		.cfi_def_cfa_offset 32
 591 0004 0446     		mov	r4, r0
 592 0006 0E46     		mov	r6, r1
 593 0008 1546     		mov	r5, r2
 594 000a 0193     		str	r3, [sp, #4]
 211:Core/Src/can.c ****     if (can_wait(hcan, 1) != HAL_OK)
ARM GAS  /tmp/ccztuRff.s 			page 16


 595              		.loc 1 211 5 is_stmt 1 view .LVU162
 596              		.loc 1 211 9 is_stmt 0 view .LVU163
 597 000c 0121     		movs	r1, #1
 598              	.LVL38:
 599              		.loc 1 211 9 view .LVU164
 600 000e FFF7FEFF 		bl	can_wait
 601              	.LVL39:
 602              		.loc 1 211 8 view .LVU165
 603 0012 60B9     		cbnz	r0, .L32
 212:Core/Src/can.c ****         return HAL_TIMEOUT;
 213:Core/Src/can.c **** 
 214:Core/Src/can.c ****     volatile HAL_StatusTypeDef status = HAL_CAN_AddTxMessage(hcan, header, buffer, &mailbox);
 604              		.loc 1 214 5 is_stmt 1 view .LVU166
 605              		.loc 1 214 41 is_stmt 0 view .LVU167
 606 0014 01AB     		add	r3, sp, #4
 607 0016 3246     		mov	r2, r6
 608 0018 2946     		mov	r1, r5
 609 001a 2046     		mov	r0, r4
 610 001c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 611              	.LVL40:
 612              		.loc 1 214 32 view .LVU168
 613 0020 8DF80F00 		strb	r0, [sp, #15]
 215:Core/Src/can.c **** 
 216:Core/Src/can.c ****     return status;
 614              		.loc 1 216 5 is_stmt 1 view .LVU169
 615              		.loc 1 216 12 is_stmt 0 view .LVU170
 616 0024 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 617 0028 C0B2     		uxtb	r0, r0
 618              	.L31:
 217:Core/Src/can.c **** }
 619              		.loc 1 217 1 view .LVU171
 620 002a 04B0     		add	sp, sp, #16
 621              	.LCFI12:
 622              		.cfi_remember_state
 623              		.cfi_def_cfa_offset 16
 624              		@ sp needed
 625 002c 70BD     		pop	{r4, r5, r6, pc}
 626              	.LVL41:
 627              	.L32:
 628              	.LCFI13:
 629              		.cfi_restore_state
 212:Core/Src/can.c ****         return HAL_TIMEOUT;
 630              		.loc 1 212 16 view .LVU172
 631 002e 0320     		movs	r0, #3
 632 0030 FBE7     		b	.L31
 633              		.cfi_endproc
 634              	.LFE138:
 636              		.section	.text.BMS_send_msg,"ax",%progbits
 637              		.align	1
 638              		.global	BMS_send_msg
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	BMS_send_msg:
 645              	.LVL42:
 646              	.LFB139:
ARM GAS  /tmp/ccztuRff.s 			page 17


 218:Core/Src/can.c **** 
 219:Core/Src/can.c **** 
 220:Core/Src/can.c **** 
 221:Core/Src/can.c **** 
 222:Core/Src/can.c **** 
 223:Core/Src/can.c **** //BMS messages sent to scarrellino
 224:Core/Src/can.c **** void BMS_send_msg(uint32_t id) {
 647              		.loc 1 224 32 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 40
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		.loc 1 224 32 is_stmt 0 view .LVU174
 652 0000 00B5     		push	{lr}
 653              	.LCFI14:
 654              		.cfi_def_cfa_offset 4
 655              		.cfi_offset 14, -4
 656 0002 8BB0     		sub	sp, sp, #44
 657              	.LCFI15:
 658              		.cfi_def_cfa_offset 48
 225:Core/Src/can.c ****     uint8_t buffer_tx[8] = {0};
 659              		.loc 1 225 5 is_stmt 1 view .LVU175
 660              		.loc 1 225 13 is_stmt 0 view .LVU176
 661 0004 0023     		movs	r3, #0
 662 0006 0893     		str	r3, [sp, #32]
 663 0008 0993     		str	r3, [sp, #36]
 226:Core/Src/can.c **** 
 227:Core/Src/can.c ****     CAN_TxHeaderTypeDef TxHeader = {
 664              		.loc 1 227 5 is_stmt 1 view .LVU177
 665              		.loc 1 227 25 is_stmt 0 view .LVU178
 666 000a 0293     		str	r3, [sp, #8]
 667 000c 0393     		str	r3, [sp, #12]
 668 000e 0493     		str	r3, [sp, #16]
 669 0010 0593     		str	r3, [sp, #20]
 670 0012 0693     		str	r3, [sp, #24]
 671 0014 0793     		str	r3, [sp, #28]
 672 0016 0290     		str	r0, [sp, #8]
 228:Core/Src/can.c ****         .IDE = CAN_ID_STD,
 229:Core/Src/can.c ****         .RTR = CAN_RTR_DATA,
 230:Core/Src/can.c ****         .StdId = id,
 231:Core/Src/can.c ****         .ExtId = 0,
 232:Core/Src/can.c ****         .TransmitGlobalTime = DISABLE
 233:Core/Src/can.c ****     };
 234:Core/Src/can.c **** 
 235:Core/Src/can.c ****     union {
 673              		.loc 1 235 5 is_stmt 1 view .LVU179
 236:Core/Src/can.c ****         struct hvcb_hvb_rx_v_cell_t v_cell;
 237:Core/Src/can.c ****         struct hvcb_hvb_rx_t_cell_t charge_temp_struct;
 238:Core/Src/can.c ****         struct hvcb_hvb_rx_soc_t SOC_struct;
 239:Core/Src/can.c ****     } msg;
 240:Core/Src/can.c **** 
 241:Core/Src/can.c ****     switch (id) {
 674              		.loc 1 241 5 view .LVU180
 675 0018 40F20723 		movw	r3, #519
 676 001c 9842     		cmp	r0, r3
 677 001e 48D0     		beq	.L35
 678 0020 B0F5027F 		cmp	r0, #520
 679 0024 34D0     		beq	.L36
ARM GAS  /tmp/ccztuRff.s 			page 18


 680 0026 40F20623 		movw	r3, #518
 681 002a 9842     		cmp	r0, r3
 682 002c 2DD1     		bne	.L34
 683              	.LBB6:
 242:Core/Src/can.c ****         case HVCB_HVB_RX_V_CELL_FRAME_ID:{
 243:Core/Src/can.c ****           double v_max    = 4.6;
 684              		.loc 1 243 11 view .LVU181
 685              	.LVL43:
 244:Core/Src/can.c ****           double v_min    = 3.2;
 686              		.loc 1 244 11 view .LVU182
 245:Core/Src/can.c ****           double v_mean   = 3.4;
 687              		.loc 1 245 11 view .LVU183
 246:Core/Src/can.c ****           double v_max_id = 24u;
 688              		.loc 1 246 11 view .LVU184
 247:Core/Src/can.c ****           double v_min_id = 70u;
 689              		.loc 1 247 11 view .LVU185
 248:Core/Src/can.c **** 
 249:Core/Src/can.c ****           hvcb_hvb_rx_v_cell_init(&msg.v_cell);
 690              		.loc 1 249 11 view .LVU186
 691 002e 6846     		mov	r0, sp
 692              	.LVL44:
 693              		.loc 1 249 11 is_stmt 0 view .LVU187
 694 0030 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_init
 695              	.LVL45:
 250:Core/Src/can.c **** 
 251:Core/Src/can.c ****           msg.v_cell.hvb_idx_cell_u_max = hvcb_hvb_rx_v_cell_hvb_idx_cell_u_max_encode(v_max_id);
 696              		.loc 1 251 11 is_stmt 1 view .LVU188
 697              		.loc 1 251 43 is_stmt 0 view .LVU189
 698 0034 9FED280B 		vldr.64	d0, .L41
 699 0038 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_hvb_idx_cell_u_max_encode
 700              	.LVL46:
 701              		.loc 1 251 41 view .LVU190
 702 003c 8DF80600 		strb	r0, [sp, #6]
 252:Core/Src/can.c ****           msg.v_cell.hvb_idx_cell_u_min = hvcb_hvb_rx_v_cell_hvb_idx_cell_u_min_encode(v_min_id);
 703              		.loc 1 252 11 is_stmt 1 view .LVU191
 704              		.loc 1 252 43 is_stmt 0 view .LVU192
 705 0040 9FED270B 		vldr.64	d0, .L41+8
 706 0044 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_hvb_idx_cell_u_min_encode
 707              	.LVL47:
 708              		.loc 1 252 41 view .LVU193
 709 0048 8DF80700 		strb	r0, [sp, #7]
 253:Core/Src/can.c ****           msg.v_cell.hvb_u_cell_max     = hvcb_hvb_rx_v_cell_hvb_u_cell_max_encode(v_max);
 710              		.loc 1 253 11 is_stmt 1 view .LVU194
 711              		.loc 1 253 43 is_stmt 0 view .LVU195
 712 004c 9FED260B 		vldr.64	d0, .L41+16
 713 0050 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_hvb_u_cell_max_encode
 714              	.LVL48:
 715              		.loc 1 253 41 view .LVU196
 716 0054 ADF80000 		strh	r0, [sp]	@ movhi
 254:Core/Src/can.c ****           msg.v_cell.hvb_u_cell_min     = hvcb_hvb_rx_v_cell_hvb_u_cell_min_encode(v_min);
 717              		.loc 1 254 11 is_stmt 1 view .LVU197
 718              		.loc 1 254 43 is_stmt 0 view .LVU198
 719 0058 9FED250B 		vldr.64	d0, .L41+24
 720 005c FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_hvb_u_cell_min_encode
 721              	.LVL49:
 722              		.loc 1 254 41 view .LVU199
 723 0060 ADF80400 		strh	r0, [sp, #4]	@ movhi
ARM GAS  /tmp/ccztuRff.s 			page 19


 255:Core/Src/can.c ****           msg.v_cell.hvb_u_cell_mean    = hvcb_hvb_rx_v_cell_hvb_u_cell_mean_encode(v_mean);
 724              		.loc 1 255 11 is_stmt 1 view .LVU200
 725              		.loc 1 255 43 is_stmt 0 view .LVU201
 726 0064 9FED240B 		vldr.64	d0, .L41+32
 727 0068 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_hvb_u_cell_mean_encode
 728              	.LVL50:
 729              		.loc 1 255 41 view .LVU202
 730 006c ADF80200 		strh	r0, [sp, #2]	@ movhi
 256:Core/Src/can.c **** 
 257:Core/Src/can.c ****           hvcb_hvb_rx_v_cell_pack((uint8_t *)&buffer_tx, &msg.v_cell, sizeof(buffer_tx));
 731              		.loc 1 257 11 is_stmt 1 view .LVU203
 732 0070 0822     		movs	r2, #8
 733 0072 6946     		mov	r1, sp
 734 0074 08A8     		add	r0, sp, #32
 735 0076 FFF7FEFF 		bl	hvcb_hvb_rx_v_cell_pack
 736              	.LVL51:
 258:Core/Src/can.c **** 
 259:Core/Src/can.c ****           TxHeader.DLC   = sizeof(buffer_tx);
 737              		.loc 1 259 11 view .LVU204
 738              		.loc 1 259 26 is_stmt 0 view .LVU205
 739 007a 0823     		movs	r3, #8
 740 007c 0693     		str	r3, [sp, #24]
 260:Core/Src/can.c **** 
 261:Core/Src/can.c ****           break;
 741              		.loc 1 261 11 is_stmt 1 view .LVU206
 742              	.LVL52:
 743              	.L38:
 744              		.loc 1 261 11 is_stmt 0 view .LVU207
 745              	.LBE6:
 262:Core/Src/can.c ****         }
 263:Core/Src/can.c ****             
 264:Core/Src/can.c ****         case HVCB_HVB_RX_T_CELL_FRAME_ID: {
 265:Core/Src/can.c ****           double charge_temp = 44;
 266:Core/Src/can.c **** 
 267:Core/Src/can.c ****           hvcb_hvb_rx_t_cell_init(&msg.charge_temp_struct);
 268:Core/Src/can.c ****           msg.charge_temp_struct.hvb_t_cell_max = hvcb_hvb_rx_t_cell_hvb_t_cell_max_encode(charge_t
 269:Core/Src/can.c **** 
 270:Core/Src/can.c ****           hvcb_hvb_rx_t_cell_pack((uint8_t *)&buffer_tx, &msg.charge_temp_struct, 8);
 271:Core/Src/can.c **** 
 272:Core/Src/can.c ****           TxHeader.DLC   = sizeof(buffer_tx);
 273:Core/Src/can.c **** 
 274:Core/Src/can.c ****           break;
 275:Core/Src/can.c ****         }
 276:Core/Src/can.c ****           
 277:Core/Src/can.c **** 
 278:Core/Src/can.c ****         case HVCB_HVB_RX_SOC_FRAME_ID: {
 279:Core/Src/can.c ****           double SOC = 0;
 280:Core/Src/can.c **** 
 281:Core/Src/can.c ****           hvcb_hvb_rx_soc_init(&msg.SOC_struct);
 282:Core/Src/can.c ****           msg.SOC_struct.hvb_r_so_c_hvb_u_cell_min = hvcb_hvb_rx_soc_hvb_r_so_c_hvb_u_cell_min_enco
 283:Core/Src/can.c **** 
 284:Core/Src/can.c ****           hvcb_hvb_rx_soc_pack((uint8_t *)&buffer_tx, &msg.SOC_struct, HVCB_HVB_RX_SOC_LENGTH);
 285:Core/Src/can.c **** 
 286:Core/Src/can.c ****           TxHeader.DLC   = sizeof(buffer_tx);
 287:Core/Src/can.c ****             break;
 288:Core/Src/can.c ****         }
 289:Core/Src/can.c ****           
ARM GAS  /tmp/ccztuRff.s 			page 20


 290:Core/Src/can.c **** 
 291:Core/Src/can.c ****         default:
 292:Core/Src/can.c ****             return;
 293:Core/Src/can.c ****     }
 294:Core/Src/can.c ****     can_send(&hcan1, buffer_tx, &TxHeader, CAN_TX_MAILBOX0);
 746              		.loc 1 294 5 is_stmt 1 view .LVU208
 747 007e 0123     		movs	r3, #1
 748 0080 02AA     		add	r2, sp, #8
 749 0082 08A9     		add	r1, sp, #32
 750 0084 2248     		ldr	r0, .L41+56
 751 0086 FFF7FEFF 		bl	can_send
 752              	.LVL53:
 753              	.L34:
 295:Core/Src/can.c **** 
 296:Core/Src/can.c ****     /*
 297:Core/Src/can.c ****       if (can_wait(&hcan1, 1) != HAL_OK)
 298:Core/Src/can.c ****         return;
 299:Core/Src/can.c **** 
 300:Core/Src/can.c ****       uint32_t mailbox;
 301:Core/Src/can.c **** 
 302:Core/Src/can.c ****       if (HAL_CAN_IsTxMessagePending(&hcan1, 0) == 0) {
 303:Core/Src/can.c ****           mailbox = CAN_TX_MAILBOX0;
 304:Core/Src/can.c ****       } else if (HAL_CAN_IsTxMessagePending(&hcan1, 1) == 0) {
 305:Core/Src/can.c ****           mailbox = CAN_TX_MAILBOX1;
 306:Core/Src/can.c ****       } else if (HAL_CAN_IsTxMessagePending(&hcan1, 2) == 0) {
 307:Core/Src/can.c ****           mailbox = CAN_TX_MAILBOX2;
 308:Core/Src/can.c ****       } else {
 309:Core/Src/can.c ****           return; // shouldn't happen, since can_wait() returned OK
 310:Core/Src/can.c ****       }
 311:Core/Src/can.c **** 
 312:Core/Src/can.c ****       can_send(&hcan1, buffer, &TxHeader, mailbox);
 313:Core/Src/can.c ****     */
 314:Core/Src/can.c **** 
 315:Core/Src/can.c ****     
 316:Core/Src/can.c **** }
 754              		.loc 1 316 1 is_stmt 0 view .LVU209
 755 008a 0BB0     		add	sp, sp, #44
 756              	.LCFI16:
 757              		.cfi_remember_state
 758              		.cfi_def_cfa_offset 4
 759              		@ sp needed
 760 008c 5DF804FB 		ldr	pc, [sp], #4
 761              	.LVL54:
 762              	.L36:
 763              	.LCFI17:
 764              		.cfi_restore_state
 765              	.LBB7:
 265:Core/Src/can.c **** 
 766              		.loc 1 265 11 is_stmt 1 view .LVU210
 267:Core/Src/can.c ****           msg.charge_temp_struct.hvb_t_cell_max = hvcb_hvb_rx_t_cell_hvb_t_cell_max_encode(charge_t
 767              		.loc 1 267 11 view .LVU211
 768 0090 6846     		mov	r0, sp
 769              	.LVL55:
 267:Core/Src/can.c ****           msg.charge_temp_struct.hvb_t_cell_max = hvcb_hvb_rx_t_cell_hvb_t_cell_max_encode(charge_t
 770              		.loc 1 267 11 is_stmt 0 view .LVU212
 771 0092 FFF7FEFF 		bl	hvcb_hvb_rx_t_cell_init
 772              	.LVL56:
ARM GAS  /tmp/ccztuRff.s 			page 21


 268:Core/Src/can.c **** 
 773              		.loc 1 268 11 is_stmt 1 view .LVU213
 268:Core/Src/can.c **** 
 774              		.loc 1 268 51 is_stmt 0 view .LVU214
 775 0096 9FED1A0B 		vldr.64	d0, .L41+40
 776 009a FFF7FEFF 		bl	hvcb_hvb_rx_t_cell_hvb_t_cell_max_encode
 777              	.LVL57:
 268:Core/Src/can.c **** 
 778              		.loc 1 268 49 view .LVU215
 779 009e ADF80000 		strh	r0, [sp]	@ movhi
 270:Core/Src/can.c **** 
 780              		.loc 1 270 11 is_stmt 1 view .LVU216
 781 00a2 0822     		movs	r2, #8
 782 00a4 6946     		mov	r1, sp
 783 00a6 08A8     		add	r0, sp, #32
 784 00a8 FFF7FEFF 		bl	hvcb_hvb_rx_t_cell_pack
 785              	.LVL58:
 272:Core/Src/can.c **** 
 786              		.loc 1 272 11 view .LVU217
 272:Core/Src/can.c **** 
 787              		.loc 1 272 26 is_stmt 0 view .LVU218
 788 00ac 0823     		movs	r3, #8
 789 00ae 0693     		str	r3, [sp, #24]
 274:Core/Src/can.c ****         }
 790              		.loc 1 274 11 is_stmt 1 view .LVU219
 791 00b0 E5E7     		b	.L38
 792              	.LVL59:
 793              	.L35:
 274:Core/Src/can.c ****         }
 794              		.loc 1 274 11 is_stmt 0 view .LVU220
 795              	.LBE7:
 796              	.LBB8:
 279:Core/Src/can.c **** 
 797              		.loc 1 279 11 is_stmt 1 view .LVU221
 281:Core/Src/can.c ****           msg.SOC_struct.hvb_r_so_c_hvb_u_cell_min = hvcb_hvb_rx_soc_hvb_r_so_c_hvb_u_cell_min_enco
 798              		.loc 1 281 11 view .LVU222
 799 00b2 6846     		mov	r0, sp
 800              	.LVL60:
 281:Core/Src/can.c ****           msg.SOC_struct.hvb_r_so_c_hvb_u_cell_min = hvcb_hvb_rx_soc_hvb_r_so_c_hvb_u_cell_min_enco
 801              		.loc 1 281 11 is_stmt 0 view .LVU223
 802 00b4 FFF7FEFF 		bl	hvcb_hvb_rx_soc_init
 803              	.LVL61:
 282:Core/Src/can.c **** 
 804              		.loc 1 282 11 is_stmt 1 view .LVU224
 282:Core/Src/can.c **** 
 805              		.loc 1 282 54 is_stmt 0 view .LVU225
 806 00b8 9FED130B 		vldr.64	d0, .L41+48
 807 00bc FFF7FEFF 		bl	hvcb_hvb_rx_soc_hvb_r_so_c_hvb_u_cell_min_encode
 808              	.LVL62:
 282:Core/Src/can.c **** 
 809              		.loc 1 282 52 view .LVU226
 810 00c0 0190     		str	r0, [sp, #4]
 284:Core/Src/can.c **** 
 811              		.loc 1 284 11 is_stmt 1 view .LVU227
 812 00c2 0822     		movs	r2, #8
 813 00c4 6946     		mov	r1, sp
 814 00c6 08A8     		add	r0, sp, #32
ARM GAS  /tmp/ccztuRff.s 			page 22


 815 00c8 FFF7FEFF 		bl	hvcb_hvb_rx_soc_pack
 816              	.LVL63:
 286:Core/Src/can.c ****             break;
 817              		.loc 1 286 11 view .LVU228
 286:Core/Src/can.c ****             break;
 818              		.loc 1 286 26 is_stmt 0 view .LVU229
 819 00cc 0823     		movs	r3, #8
 820 00ce 0693     		str	r3, [sp, #24]
 287:Core/Src/can.c ****         }
 821              		.loc 1 287 13 is_stmt 1 view .LVU230
 822 00d0 D5E7     		b	.L38
 823              	.L42:
 824 00d2 00BFAFF3 		.align	3
 824      0080
 825              	.L41:
 826 00d8 00000000 		.word	0
 827 00dc 00003840 		.word	1077411840
 828 00e0 00000000 		.word	0
 829 00e4 00805140 		.word	1079083008
 830 00e8 66666666 		.word	1717986918
 831 00ec 66661240 		.word	1074947686
 832 00f0 9A999999 		.word	-1717986918
 833 00f4 99990940 		.word	1074370969
 834 00f8 33333333 		.word	858993459
 835 00fc 33330B40 		.word	1074475827
 836 0100 00000000 		.word	0
 837 0104 00004640 		.word	1078329344
 838 0108 00000000 		.word	0
 839 010c 00000000 		.word	0
 840 0110 00000000 		.word	.LANCHOR0
 841              	.LBE8:
 842              		.cfi_endproc
 843              	.LFE139:
 845              		.section	.text.BMS_SendMessageRoutine,"ax",%progbits
 846              		.align	1
 847              		.global	BMS_SendMessageRoutine
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv4-sp-d16
 853              	BMS_SendMessageRoutine:
 854              	.LFB140:
 317:Core/Src/can.c **** //bms send message routine
 318:Core/Src/can.c ****  void BMS_SendMessageRoutine(void) {
 855              		.loc 1 318 36 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859 0000 08B5     		push	{r3, lr}
 860              	.LCFI18:
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 3, -8
 863              		.cfi_offset 14, -4
 319:Core/Src/can.c ****     BMS_send_msg(HVCB_HVB_RX_V_CELL_FRAME_ID);
 864              		.loc 1 319 5 view .LVU232
 865 0002 40F20620 		movw	r0, #518
 866 0006 FFF7FEFF 		bl	BMS_send_msg
ARM GAS  /tmp/ccztuRff.s 			page 23


 867              	.LVL64:
 320:Core/Src/can.c ****     BMS_send_msg(HVCB_HVB_RX_SOC_FRAME_ID);
 868              		.loc 1 320 5 view .LVU233
 869 000a 40F20720 		movw	r0, #519
 870 000e FFF7FEFF 		bl	BMS_send_msg
 871              	.LVL65:
 321:Core/Src/can.c ****     BMS_send_msg(HVCB_HVB_RX_T_CELL_FRAME_ID);
 872              		.loc 1 321 5 view .LVU234
 873 0012 4FF40270 		mov	r0, #520
 874 0016 FFF7FEFF 		bl	BMS_send_msg
 875              	.LVL66:
 322:Core/Src/can.c ****     
 323:Core/Src/can.c ****  }
 876              		.loc 1 323 2 is_stmt 0 view .LVU235
 877 001a 08BD     		pop	{r3, pc}
 878              		.cfi_endproc
 879              	.LFE140:
 881              		.global	__aeabi_d2uiz
 882              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 883              		.align	1
 884              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv4-sp-d16
 890              	HAL_CAN_RxFifo0MsgPendingCallback:
 891              	.LVL67:
 892              	.LFB141:
 324:Core/Src/can.c **** 
 325:Core/Src/can.c **** 
 326:Core/Src/can.c ****  //RECEIVED messages from scarrellino
 327:Core/Src/can.c **** 
 328:Core/Src/can.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 893              		.loc 1 328 65 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 56
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 329:Core/Src/can.c ****     //make sure it's from CAN1
 330:Core/Src/can.c ****     if (hcan->Instance != CAN1) return;
 897              		.loc 1 330 5 view .LVU237
 898              		.loc 1 330 13 is_stmt 0 view .LVU238
 899 0000 0268     		ldr	r2, [r0]
 900              		.loc 1 330 8 view .LVU239
 901 0002 234B     		ldr	r3, .L56
 902 0004 9A42     		cmp	r2, r3
 903 0006 00D0     		beq	.L55
 904 0008 7047     		bx	lr
 905              	.L55:
 328:Core/Src/can.c ****     //make sure it's from CAN1
 906              		.loc 1 328 65 view .LVU240
 907 000a 00B5     		push	{lr}
 908              	.LCFI19:
 909              		.cfi_def_cfa_offset 4
 910              		.cfi_offset 14, -4
 911 000c 8FB0     		sub	sp, sp, #60
 912              	.LCFI20:
 913              		.cfi_def_cfa_offset 64
ARM GAS  /tmp/ccztuRff.s 			page 24


 331:Core/Src/can.c **** 
 332:Core/Src/can.c ****     CAN_RxHeaderTypeDef rxHeader;
 914              		.loc 1 332 5 is_stmt 1 view .LVU241
 333:Core/Src/can.c ****     uint8_t rxData[8];
 915              		.loc 1 333 5 view .LVU242
 334:Core/Src/can.c **** 
 335:Core/Src/can.c ****     
 336:Core/Src/can.c ****     if (HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rxHeader, rxData) != HAL_OK)
 916              		.loc 1 336 5 view .LVU243
 917              		.loc 1 336 9 is_stmt 0 view .LVU244
 918 000e 05AB     		add	r3, sp, #20
 919 0010 07AA     		add	r2, sp, #28
 920 0012 0021     		movs	r1, #0
 921 0014 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 922              	.LVL68:
 923              		.loc 1 336 8 view .LVU245
 924 0018 28B9     		cbnz	r0, .L45
 337:Core/Src/can.c ****       return;
 338:Core/Src/can.c **** 
 339:Core/Src/can.c ****     switch (rxHeader.StdId) {
 925              		.loc 1 339 5 is_stmt 1 view .LVU246
 926              		.loc 1 339 21 is_stmt 0 view .LVU247
 927 001a 079B     		ldr	r3, [sp, #28]
 928              		.loc 1 339 5 view .LVU248
 929 001c 412B     		cmp	r3, #65
 930 001e 05D0     		beq	.L47
 931 0020 B3F5A87F 		cmp	r3, #336
 932 0024 20D0     		beq	.L48
 933              	.L45:
 340:Core/Src/can.c **** 
 341:Core/Src/can.c ****       case MCB_TLB_BAT_SIGNALS_STATUS_FRAME_ID: {
 342:Core/Src/can.c ****         struct mcb_tlb_bat_signals_status_t msg;
 343:Core/Src/can.c ****         mcb_tlb_bat_signals_status_unpack(&msg, rxData, MCB_TLB_BAT_SIGNALS_STATUS_LENGTH);
 344:Core/Src/can.c **** 
 345:Core/Src/can.c ****         ams_error_active = mcb_tlb_bat_signals_status_ams_err_is_active_decode(msg.ams_err_is_activ
 346:Core/Src/can.c ****         imd_error_active = mcb_tlb_bat_signals_status_imd_err_is_active_decode(msg.imd_err_is_activ
 347:Core/Src/can.c ****         can_data_updated=1;
 348:Core/Src/can.c ****         break;
 349:Core/Src/can.c ****       }
 350:Core/Src/can.c **** 
 351:Core/Src/can.c ****       case HVCB_HVB_TX_VCU_CMD_FRAME_ID: {
 352:Core/Src/can.c ****         struct hvcb_hvb_tx_vcu_cmd_t cmd;
 353:Core/Src/can.c ****         hvcb_hvb_tx_vcu_cmd_unpack(&cmd, rxData, HVCB_HVB_TX_VCU_CMD_LENGTH);
 354:Core/Src/can.c **** 
 355:Core/Src/can.c ****         airs_command = hvcb_hvb_tx_vcu_cmd_vcu_b_hvb_inv_req_decode(cmd.vcu_b_hvb_inv_req);
 356:Core/Src/can.c ****         can_data_updated=1;
 357:Core/Src/can.c ****         break;
 358:Core/Src/can.c ****       }
 359:Core/Src/can.c **** 
 360:Core/Src/can.c ****       default:
 361:Core/Src/can.c ****         break; // ignore frame
 362:Core/Src/can.c ****     }
 363:Core/Src/can.c **** }
 934              		.loc 1 363 1 view .LVU249
 935 0026 0FB0     		add	sp, sp, #60
 936              	.LCFI21:
 937              		.cfi_remember_state
ARM GAS  /tmp/ccztuRff.s 			page 25


 938              		.cfi_def_cfa_offset 4
 939              		@ sp needed
 940 0028 5DF804FB 		ldr	pc, [sp], #4
 941              	.L47:
 942              	.LCFI22:
 943              		.cfi_restore_state
 944              	.LBB9:
 342:Core/Src/can.c ****         mcb_tlb_bat_signals_status_unpack(&msg, rxData, MCB_TLB_BAT_SIGNALS_STATUS_LENGTH);
 945              		.loc 1 342 9 is_stmt 1 view .LVU250
 343:Core/Src/can.c **** 
 946              		.loc 1 343 9 view .LVU251
 947 002c 0422     		movs	r2, #4
 948 002e 05A9     		add	r1, sp, #20
 949 0030 0DEB0200 		add	r0, sp, r2
 950 0034 FFF7FEFF 		bl	mcb_tlb_bat_signals_status_unpack
 951              	.LVL69:
 345:Core/Src/can.c ****         imd_error_active = mcb_tlb_bat_signals_status_imd_err_is_active_decode(msg.imd_err_is_activ
 952              		.loc 1 345 9 view .LVU252
 345:Core/Src/can.c ****         imd_error_active = mcb_tlb_bat_signals_status_imd_err_is_active_decode(msg.imd_err_is_activ
 953              		.loc 1 345 28 is_stmt 0 view .LVU253
 954 0038 9DF80A00 		ldrb	r0, [sp, #10]	@ zero_extendqisi2
 955 003c FFF7FEFF 		bl	mcb_tlb_bat_signals_status_ams_err_is_active_decode
 956              	.LVL70:
 957 0040 51EC100B 		vmov	r0, r1, d0
 345:Core/Src/can.c ****         imd_error_active = mcb_tlb_bat_signals_status_imd_err_is_active_decode(msg.imd_err_is_activ
 958              		.loc 1 345 26 view .LVU254
 959 0044 FFF7FEFF 		bl	__aeabi_d2uiz
 960              	.LVL71:
 961 0048 124B     		ldr	r3, .L56+4
 962 004a 1870     		strb	r0, [r3]
 346:Core/Src/can.c ****         can_data_updated=1;
 963              		.loc 1 346 9 is_stmt 1 view .LVU255
 346:Core/Src/can.c ****         can_data_updated=1;
 964              		.loc 1 346 28 is_stmt 0 view .LVU256
 965 004c 9DF80B00 		ldrb	r0, [sp, #11]	@ zero_extendqisi2
 966 0050 FFF7FEFF 		bl	mcb_tlb_bat_signals_status_imd_err_is_active_decode
 967              	.LVL72:
 968 0054 51EC100B 		vmov	r0, r1, d0
 346:Core/Src/can.c ****         can_data_updated=1;
 969              		.loc 1 346 26 view .LVU257
 970 0058 FFF7FEFF 		bl	__aeabi_d2uiz
 971              	.LVL73:
 972 005c 0E4B     		ldr	r3, .L56+8
 973 005e 1870     		strb	r0, [r3]
 347:Core/Src/can.c ****         break;
 974              		.loc 1 347 9 is_stmt 1 view .LVU258
 347:Core/Src/can.c ****         break;
 975              		.loc 1 347 25 is_stmt 0 view .LVU259
 976 0060 0E4B     		ldr	r3, .L56+12
 977 0062 0122     		movs	r2, #1
 978 0064 1A70     		strb	r2, [r3]
 348:Core/Src/can.c ****       }
 979              		.loc 1 348 9 is_stmt 1 view .LVU260
 980 0066 DEE7     		b	.L45
 981              	.L48:
 982              	.LBE9:
 983              	.LBB10:
ARM GAS  /tmp/ccztuRff.s 			page 26


 352:Core/Src/can.c ****         hvcb_hvb_tx_vcu_cmd_unpack(&cmd, rxData, HVCB_HVB_TX_VCU_CMD_LENGTH);
 984              		.loc 1 352 9 view .LVU261
 353:Core/Src/can.c **** 
 985              		.loc 1 353 9 view .LVU262
 986 0068 0222     		movs	r2, #2
 987 006a 05A9     		add	r1, sp, #20
 988 006c 01A8     		add	r0, sp, #4
 989 006e FFF7FEFF 		bl	hvcb_hvb_tx_vcu_cmd_unpack
 990              	.LVL74:
 355:Core/Src/can.c ****         can_data_updated=1;
 991              		.loc 1 355 9 view .LVU263
 355:Core/Src/can.c ****         can_data_updated=1;
 992              		.loc 1 355 24 is_stmt 0 view .LVU264
 993 0072 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 994 0076 FFF7FEFF 		bl	hvcb_hvb_tx_vcu_cmd_vcu_b_hvb_inv_req_decode
 995              	.LVL75:
 996 007a 51EC100B 		vmov	r0, r1, d0
 355:Core/Src/can.c ****         can_data_updated=1;
 997              		.loc 1 355 22 view .LVU265
 998 007e FFF7FEFF 		bl	__aeabi_d2uiz
 999              	.LVL76:
 1000 0082 074B     		ldr	r3, .L56+16
 1001 0084 1870     		strb	r0, [r3]
 356:Core/Src/can.c ****         break;
 1002              		.loc 1 356 9 is_stmt 1 view .LVU266
 356:Core/Src/can.c ****         break;
 1003              		.loc 1 356 25 is_stmt 0 view .LVU267
 1004 0086 054B     		ldr	r3, .L56+12
 1005 0088 0122     		movs	r2, #1
 1006 008a 1A70     		strb	r2, [r3]
 357:Core/Src/can.c ****       }
 1007              		.loc 1 357 9 is_stmt 1 view .LVU268
 1008 008c CBE7     		b	.L45
 1009              	.L57:
 1010 008e 00BF     		.align	2
 1011              	.L56:
 1012 0090 00640040 		.word	1073767424
 1013 0094 00000000 		.word	.LANCHOR1
 1014 0098 00000000 		.word	.LANCHOR2
 1015 009c 00000000 		.word	.LANCHOR3
 1016 00a0 00000000 		.word	.LANCHOR4
 1017              	.LBE10:
 1018              		.cfi_endproc
 1019              	.LFE141:
 1021              		.section	.text.BMS_ReceiveRoutine,"ax",%progbits
 1022              		.align	1
 1023              		.global	BMS_ReceiveRoutine
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv4-sp-d16
 1029              	BMS_ReceiveRoutine:
 1030              	.LFB142:
 364:Core/Src/can.c **** 
 365:Core/Src/can.c **** 
 366:Core/Src/can.c **** //toggle GPIO based on RECEIVED messages from scarrellino
 367:Core/Src/can.c **** void BMS_ReceiveRoutine(void) {
ARM GAS  /tmp/ccztuRff.s 			page 27


 1031              		.loc 1 367 31 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035 0000 10B5     		push	{r4, lr}
 1036              	.LCFI23:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 4, -8
 1039              		.cfi_offset 14, -4
 368:Core/Src/can.c ****   //ams error: active = drive GPIO low
 369:Core/Src/can.c ****   HAL_GPIO_WritePin(AMS_ERR_GPIO_Port, AMS_ERR_Pin, ams_error_active ? GPIO_PIN_RESET : GPIO_PIN_SE
 1040              		.loc 1 369 3 view .LVU270
 1041 0002 0E4B     		ldr	r3, .L60
 1042 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1043 0006 0E4C     		ldr	r4, .L60+4
 1044 0008 B2FA82F2 		clz	r2, r2
 1045 000c 5209     		lsrs	r2, r2, #5
 1046 000e 0421     		movs	r1, #4
 1047 0010 2046     		mov	r0, r4
 1048 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1049              	.LVL77:
 370:Core/Src/can.c **** 
 371:Core/Src/can.c ****   //imd error: active = drive GPIO low
 372:Core/Src/can.c ****     HAL_GPIO_WritePin(IMD_ERR_GPIO_Port, IMD_ERR_Pin, imd_error_active ? GPIO_PIN_RESET : GPIO_PIN_
 1050              		.loc 1 372 5 view .LVU271
 1051 0016 0B4B     		ldr	r3, .L60+8
 1052 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1053 001a B2FA82F2 		clz	r2, r2
 1054 001e 5209     		lsrs	r2, r2, #5
 1055 0020 0221     		movs	r1, #2
 1056 0022 2046     		mov	r0, r4
 1057 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1058              	.LVL78:
 373:Core/Src/can.c **** 
 374:Core/Src/can.c ****   //AIRs command: 1 = close AIRs = drive GPIO low
 375:Core/Src/can.c ****     HAL_GPIO_WritePin(AIR_CMND_GPIO_Port, AIR_CMND_Pin, airs_command ? GPIO_PIN_RESET : GPIO_PIN_SE
 1059              		.loc 1 375 5 view .LVU272
 1060 0028 074B     		ldr	r3, .L60+12
 1061 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1062 002c B2FA82F2 		clz	r2, r2
 1063 0030 5209     		lsrs	r2, r2, #5
 1064 0032 0121     		movs	r1, #1
 1065 0034 2046     		mov	r0, r4
 1066 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1067              	.LVL79:
 376:Core/Src/can.c **** }
 1068              		.loc 1 376 1 is_stmt 0 view .LVU273
 1069 003a 10BD     		pop	{r4, pc}
 1070              	.L61:
 1071              		.align	2
 1072              	.L60:
 1073 003c 00000000 		.word	.LANCHOR1
 1074 0040 00040240 		.word	1073873920
 1075 0044 00000000 		.word	.LANCHOR2
 1076 0048 00000000 		.word	.LANCHOR4
 1077              		.cfi_endproc
 1078              	.LFE142:
ARM GAS  /tmp/ccztuRff.s 			page 28


 1080              		.global	airs_command
 1081              		.global	imd_error_active
 1082              		.global	ams_error_active
 1083              		.global	hcan1
 1084              		.global	can_data_updated
 1085              		.section	.bss.airs_command,"aw",%nobits
 1086              		.set	.LANCHOR4,. + 0
 1089              	airs_command:
 1090 0000 00       		.space	1
 1091              		.section	.bss.ams_error_active,"aw",%nobits
 1092              		.set	.LANCHOR1,. + 0
 1095              	ams_error_active:
 1096 0000 00       		.space	1
 1097              		.section	.bss.can_data_updated,"aw",%nobits
 1098              		.set	.LANCHOR3,. + 0
 1101              	can_data_updated:
 1102 0000 00       		.space	1
 1103              		.section	.bss.hcan1,"aw",%nobits
 1104              		.align	2
 1105              		.set	.LANCHOR0,. + 0
 1108              	hcan1:
 1109 0000 00000000 		.space	40
 1109      00000000 
 1109      00000000 
 1109      00000000 
 1109      00000000 
 1110              		.section	.bss.imd_error_active,"aw",%nobits
 1111              		.set	.LANCHOR2,. + 0
 1114              	imd_error_active:
 1115 0000 00       		.space	1
 1116              		.text
 1117              	.Letext0:
 1118              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1119              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1120              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1121              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1122              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1123              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1124              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1125              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1126              		.file 10 "Core/Inc/can.h"
 1127              		.file 11 "SCan/SC24/artifacts/HVCB/c_source/hvcb.h"
 1128              		.file 12 "Core/Inc/usart.h"
 1129              		.file 13 "SCan/SC24/artifacts/MCB/c_source/Inc/mcb.h"
 1130              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1131              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1132              		.file 16 "/usr/include/newlib/string.h"
 1133              		.file 17 "Core/Inc/main.h"
ARM GAS  /tmp/ccztuRff.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
     /tmp/ccztuRff.s:18     .rodata.MX_CAN1_Init.str1.4:0000000000000000 $d
     /tmp/ccztuRff.s:25     .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccztuRff.s:33     .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccztuRff.s:260    .text.MX_CAN1_Init:00000000000000e0 $d
     /tmp/ccztuRff.s:270    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccztuRff.s:277    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccztuRff.s:424    .text.HAL_CAN_MspInit:00000000000000a8 $d
     /tmp/ccztuRff.s:430    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccztuRff.s:437    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccztuRff.s:496    .text.HAL_CAN_MspDeInit:000000000000003c $d
     /tmp/ccztuRff.s:503    .text.can_wait:0000000000000000 $t
     /tmp/ccztuRff.s:510    .text.can_wait:0000000000000000 can_wait
     /tmp/ccztuRff.s:566    .text.can_send:0000000000000000 $t
     /tmp/ccztuRff.s:573    .text.can_send:0000000000000000 can_send
     /tmp/ccztuRff.s:637    .text.BMS_send_msg:0000000000000000 $t
     /tmp/ccztuRff.s:644    .text.BMS_send_msg:0000000000000000 BMS_send_msg
     /tmp/ccztuRff.s:826    .text.BMS_send_msg:00000000000000d8 $d
     /tmp/ccztuRff.s:846    .text.BMS_SendMessageRoutine:0000000000000000 $t
     /tmp/ccztuRff.s:853    .text.BMS_SendMessageRoutine:0000000000000000 BMS_SendMessageRoutine
     /tmp/ccztuRff.s:883    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccztuRff.s:890    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccztuRff.s:1012   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000090 $d
     /tmp/ccztuRff.s:1022   .text.BMS_ReceiveRoutine:0000000000000000 $t
     /tmp/ccztuRff.s:1029   .text.BMS_ReceiveRoutine:0000000000000000 BMS_ReceiveRoutine
     /tmp/ccztuRff.s:1073   .text.BMS_ReceiveRoutine:000000000000003c $d
     /tmp/ccztuRff.s:1089   .bss.airs_command:0000000000000000 airs_command
     /tmp/ccztuRff.s:1114   .bss.imd_error_active:0000000000000000 imd_error_active
     /tmp/ccztuRff.s:1095   .bss.ams_error_active:0000000000000000 ams_error_active
     /tmp/ccztuRff.s:1108   .bss.hcan1:0000000000000000 hcan1
     /tmp/ccztuRff.s:1101   .bss.can_data_updated:0000000000000000 can_data_updated
     /tmp/ccztuRff.s:1090   .bss.airs_command:0000000000000000 $d
     /tmp/ccztuRff.s:1096   .bss.ams_error_active:0000000000000000 $d
     /tmp/ccztuRff.s:1102   .bss.can_data_updated:0000000000000000 $d
     /tmp/ccztuRff.s:1104   .bss.hcan1:0000000000000000 $d
     /tmp/ccztuRff.s:1115   .bss.imd_error_active:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CAN_ActivateNotification
HAL_CAN_Start
Error_Handler
strlen
HAL_UART_Transmit
huart2
error_code
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_GetTick
HAL_CAN_GetTxMailboxesFreeLevel
HAL_CAN_AddTxMessage
hvcb_hvb_rx_v_cell_init
ARM GAS  /tmp/ccztuRff.s 			page 30


hvcb_hvb_rx_v_cell_hvb_idx_cell_u_max_encode
hvcb_hvb_rx_v_cell_hvb_idx_cell_u_min_encode
hvcb_hvb_rx_v_cell_hvb_u_cell_max_encode
hvcb_hvb_rx_v_cell_hvb_u_cell_min_encode
hvcb_hvb_rx_v_cell_hvb_u_cell_mean_encode
hvcb_hvb_rx_v_cell_pack
hvcb_hvb_rx_t_cell_init
hvcb_hvb_rx_t_cell_hvb_t_cell_max_encode
hvcb_hvb_rx_t_cell_pack
hvcb_hvb_rx_soc_init
hvcb_hvb_rx_soc_hvb_r_so_c_hvb_u_cell_min_encode
hvcb_hvb_rx_soc_pack
__aeabi_d2uiz
HAL_CAN_GetRxMessage
mcb_tlb_bat_signals_status_unpack
mcb_tlb_bat_signals_status_ams_err_is_active_decode
mcb_tlb_bat_signals_status_imd_err_is_active_decode
hvcb_hvb_tx_vcu_cmd_unpack
hvcb_hvb_tx_vcu_cmd_vcu_b_hvb_inv_req_decode
HAL_GPIO_WritePin
